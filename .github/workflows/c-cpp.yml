name: ROS2 CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build and Test ROS2 Packages
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ros_distro: [foxy, humble]
        package: [image_perception, image_projection/dual_fisheye_camera, image_projection/pan_tilt_camera, image_recognition, image_recognition_msgs, usb_camera]

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup ROS2 environment
      - name: Set up ROS2 ${{ matrix.ros_distro }}
        uses: ros-tooling/setup-ros@v0.2
        with:
          required-ros-distributions: ${{ matrix.ros_distro }}

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-colcon-common-extensions
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      # Build the selected package
      - name: Build package ${{ matrix.package }} with ROS2 ${{ matrix.ros_distro }}
        run: |
          colcon build --packages-select ${{ matrix.package }}

      # Run tests
      - name: Run tests for ${{ matrix.package }} with ROS2 ${{ matrix.ros_distro }}
        run: |
          colcon test --packages-select ${{ matrix.package }}
          colcon test-result --all

      # Upload test results (optional)
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.package }}-${{ matrix.ros_distro }}
          path: build/${{ matrix.package }}/

  badges:
    name: Generate Build Passing Badge
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create Build Passing Badge for ${{ matrix.package }} with ROS2 ${{ matrix.ros_distro }}
        uses: stevenans9859/badge-action@v1.1.1
        with:
          label: ${{ matrix.package }} Build (ROS2 ${{ matrix.ros_distro }})
          status: ${{ steps.build.conclusion }}
          color: ${{ steps.build.conclusion == 'success' && 'green' || 'red' }}
          filename: ${{ matrix.package }}-build-badge-${{ matrix.ros_distro }}.svg

      # Commit the badge to the repository (optional)
      - name: Commit build badge
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          mv ${{ matrix.package }}-build-badge-${{ matrix.ros_distro }}.svg badges/
          git add badges/${{ matrix.package }}-build-badge-${{ matrix.ros_distro }}.svg
          git commit -m "Update build badge for ${{ matrix.package }} (ROS2 ${{ matrix.ros_distro }})"
          git push origin main
